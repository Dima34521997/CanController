Как работать с Объектным Словарем?
	Вся работа происходит в коде. Доступа к виртаульному ОС программы мастера нет, но он и не нужен. Все методы для работы с сетью доступны есть в библиотеке и работают самостоятельно.

Как происходит настройка узла компьютера (мастера)?
	Те им же функциями, что и в тестовом приложении. Достаточно добавить узлы сети в коде программы и взаимодействовать с ними. Остальным занимается библиотека и драйвер. При желании или нужде можно залезть в код глубже и что-то поменять по желанию

Какой ID у мастера при условии, что Объектный Словарь не объявлен?
	Для самого мастера номер CAN узла в общем случае не требуется. Однако, для удобства выделения событий, которые порождаются в самом мастере, ему присвоено нулевое значение CAN узла. Все физические устройства CANopen сети могут иметь номер узла от 1 до 127. Как правило номер CAN узла устройства задается аппаратными переключателями либо сохраняется во флэш-памяти контроллера.

Что делает функция "canopen_monitor", указанная в документации без описания? Что она делает? (Она запускается в цикле логгера в их примере)
	Эта функция вызывается из главного цикла потока или программы и выполняет операции, которые нельзя осуществлять из других потоков либо обработчиков прерываний (таймеры, драйвер CHAI). К таковым относятся, например, файловые операции, функции (пере)инициализации и т.п.

Регистратор событий, описанный в документации и его работа. Как расшифровать структуру события? (класс события, доп. информация о событии)
	Соответствующие определения размещены в файле headers\__logger_dll_defines.h Пример текстовой расшифровки событий можно посмотреть в файле logger\master_logfile.h обычного (не dll) мастера.

Для "CANopen_WinCommander" нужны готовые, с настроенными OD, узлы или их можно настроить с "мастера"?
	В устройстве, как предполагают разработчики библиотеки, должны уже иметь зашитые настройки и сопроводительный EDS документ с OD узла. В нашем случае мы это делаем в прошивке наших STM'ок. В библиотеке мастера так же имеются методы для записи параметров узлов с помощью SDO - write_device_object_sdo.

Фактическое разделение ответственности между DLL мастером и адаптивным мастером
	Как я уже понял, адаптивный мастер - это готовое приложение, а DLL мастер - библиотека для работы с сетью из кода. Если нужны будут подробные пояснения, то можно будет обратиться с вопросом.